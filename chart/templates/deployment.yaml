apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ template "microservice.fullname" . }}
  labels:
    app: {{ template "microservice.name" . }}
    chart: {{ template "microservice.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app: {{ template "microservice.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "microservice.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.service.httpPort | default 3000 }}"
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.service.httpPort }}
          - name: PORT
            value: "{{ .Values.service.httpPort }}"
          {{- end }}
          {{- if .Values.environment }}
          - name: ENVIRONMENT
            value: {{ .Values.environment }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.httpPort | default 3000 }}
              protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
